import React, { useState } from 'react';
import { Button } from './ui/button';
import { 
  Home, 
  Target,
  Satellite, 
  TrendingUp, 
  Lightbulb,
  Building2,
  MessageCircle, 
  Settings, 
  Menu,
  X,
  User,
  Users,
  HeadphonesIcon,
  WifiOff,
  CreditCard
} from 'lucide-react';
import { motion } from 'motion/react';
import { KrishiLogo } from './KrishiLogo';
import { getContent } from '../utils/languages';

interface VisualSidebarProps {
  currentScreen: string;
  setCurrentScreen: (screen: string) => void;
  language: string;
}

// Visual menu items with agricultural icons and emojis
const getVisualMenuItems = (language: string) => {
  const menuTranslations: { [key: string]: any } = {
    en: {
      // Core Features (Primary)
      'dashboard': { label: 'Home', emoji: 'ЁЯПа', desc: 'Main Dashboard' },
      'yield-prediction': { label: 'Crop Yield', emoji: 'ЁЯМ╛', desc: 'Predict Harvest' },
      
      // Monitoring & Analysis
      'monitoring': { label: 'Farm Watch', emoji: 'ЁЯУб', desc: 'Monitor Fields' },
      'analytics': { label: 'Reports', emoji: 'ЁЯУК', desc: 'View Analytics' },
      
      // Tools & Services
      'recommendations': { label: 'AI Helper', emoji: 'ЁЯдЦ', desc: 'Smart Tips' },
      'schemes': { label: 'Govt. Schemes', emoji: 'ЁЯПЫя╕П', desc: 'Apply Benefits' },
      'aadhaar': { label: 'Aadhaar ID', emoji: 'ЁЯЖФ', desc: 'Verify Identity' },
      'alerts': { label: 'Alerts', emoji: 'ЁЯУ▒', desc: 'WhatsApp Alerts' },
      
      // Community & Support
      'community': { label: 'Community', emoji: 'ЁЯСе', desc: 'Connect Farmers' },
      'feedback': { label: 'Feedback', emoji: 'ЁЯОд', desc: 'Voice & Text' },
      'offline': { label: 'Offline Mode', emoji: 'ЁЯУб', desc: 'Sync Data' },
      
      // Account
      'settings': { label: 'Settings', emoji: 'тЪЩя╕П', desc: 'App Settings' }
    },
    hi: {
      'dashboard': { label: 'рдШрд░', emoji: 'ЁЯПа', desc: 'рдореБрдЦреНрдп рдбреИрд╢рдмреЛрд░реНрдб' },
      'yield-prediction': { label: 'рдлрд╕рд▓ рдЙрддреНрдкрд╛рджрди', emoji: 'ЁЯМ╛', desc: 'рдлрд╕рд▓ рдХрд╛ рдЕрдиреБрдорд╛рди' },
      'monitoring': { label: 'рдЦреЗрдд рдирд┐рдЧрд░рд╛рдиреА', emoji: 'ЁЯУб', desc: 'рдЦреЗрдд рджреЗрдЦреЗрдВ' },
      'analytics': { label: 'рд░рд┐рдкреЛрд░реНрдЯ', emoji: 'ЁЯУК', desc: 'рд╡рд┐рд╢реНрд▓реЗрд╖рдг рджреЗрдЦреЗрдВ' },
      'recommendations': { label: 'AI рд╕рд╣рд╛рдпрдХ', emoji: 'ЁЯдЦ', desc: 'рд╕реНрдорд╛рд░реНрдЯ рд╕реБрдЭрд╛рд╡' },
      'schemes': { label: 'рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛', emoji: 'ЁЯПЫя╕П', desc: 'рд▓рд╛рдн рдкрд╛рдПрдВ' },
      'aadhaar': { label: 'рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб', emoji: 'ЁЯЖФ', desc: 'рдкрд╣рдЪрд╛рди рд╕рддреНрдпрд╛рдкрди' },
      'alerts': { label: 'рдЕрд▓рд░реНрдЯ', emoji: 'ЁЯУ▒', desc: 'рд╡реНрд╣рд╛рдЯреНрд╕рдЕрдк рдЕрд▓рд░реНрдЯ' },
      'community': { label: 'рд╕рдореБрджрд╛рдп', emoji: 'ЁЯСе', desc: 'рдХрд┐рд╕рд╛рди рдЬреБрдбрд╝рд╛рд╡' },
      'feedback': { label: 'рдлреАрдбрдмреИрдХ', emoji: 'ЁЯОд', desc: 'рдЖрд╡рд╛рдЬрд╝ рдФрд░ рдЯреЗрдХреНрд╕реНрдЯ' },
      'offline': { label: 'рдСрдлрд▓рд╛рдЗрди рдореЛрдб', emoji: 'ЁЯУб', desc: 'рдбреЗрдЯрд╛ рд╕рд┐рдВрдХ' },
      'settings': { label: 'рд╕реЗрдЯрд┐рдВрдЧреНрд╕', emoji: 'тЪЩя╕П', desc: 'рдРрдк рд╕реЗрдЯрд┐рдВрдЧреНрд╕' }
    },
    mr: {
      'dashboard': { label: 'рдШрд░', emoji: 'ЁЯПа', desc: 'рдореБрдЦреНрдп рдбреЕрд╢рдмреЛрд░реНрдб' },
      'yield-prediction': { label: 'рдкреАрдХ рдЙрддреНрдкрд╛рджрди', emoji: 'ЁЯМ╛', desc: 'рдкрд┐рдХрд╛рдЪрд╛ рдЕрдВрджрд╛рдЬ' },
      'monitoring': { label: 'рд╢реЗрдд рдирд┐рд░реАрдХреНрд╖рдг', emoji: 'ЁЯУб', desc: 'рд╢реЗрдд рдкрд╣рд╛' },
      'analytics': { label: 'рдЕрд╣рд╡рд╛рд▓', emoji: 'ЁЯУК', desc: 'рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдкрд╣рд╛' },
      'recommendations': { label: 'AI рд╕рд╣рд╛рдпреНрдпрдХ', emoji: 'ЁЯдЦ', desc: 'рд╣реБрд╢рд╛рд░ рд╕рд▓реНрд▓рд╛' },
      'schemes': { label: 'рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛', emoji: 'ЁЯПЫя╕П', desc: 'рд▓рд╛рдн рдорд┐рд│рд╡рд╛' },
      'aadhaar': { label: 'рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб', emoji: 'ЁЯЖФ', desc: 'рдУрд│рдЦ рдкрдбрддрд╛рд│рдгреА' },
      'alerts': { label: 'рдЕрд▓рд░реНрдЯ', emoji: 'ЁЯУ▒', desc: 'рд╡реНрд╣рд╛рдЯреНрд╕рдЕрдк рдЕрд▓рд░реНрдЯ' },
      'community': { label: 'рд╕рдореБрджрд╛рдп', emoji: 'ЁЯСе', desc: 'рд╢реЗрддрдХрд░реА рдЬреЛрдбрдгреА' },
      'feedback': { label: 'рдлреАрдбрдмреЕрдХ', emoji: 'ЁЯОд', desc: 'рдЖрд╡рд╛рдЬ рдЖрдгрд┐ рдордЬрдХреВрд░' },
      'offline': { label: 'рдСрдлрд▓рд╛рдЗрди рдореЛрдб', emoji: 'ЁЯУб', desc: 'рдбреЗрдЯрд╛ рд╕рд┐рдВрдХ' },
      'settings': { label: 'рд╕реЗрдЯрд┐рдВрдЧреНрдЬ', emoji: 'тЪЩя╕П', desc: 'рдЕреЕрдк рд╕реЗрдЯрд┐рдВрдЧреНрдЬ' }
    },
    ta: {
      'dashboard': { label: 'ро╡рпАроЯрпБ', emoji: 'ЁЯПа', desc: 'роорпБродройрпНроорпИ роЯро╛ро╖рпНрокрпЛро░рпНроЯрпБ' },
      'yield-prediction': { label: 'рокропро┐ро░рпН ро╡ро┐ро│рпИроЪрпНроЪро▓рпН', emoji: 'ЁЯМ╛', desc: 'роЕро▒рпБро╡роЯрпИ роХрогро┐рокрпНрокрпБ' },
      'monitoring': { label: 'рокрогрпНрогрпИ роХрогрпНроХро╛рогро┐рокрпНрокрпБ', emoji: 'ЁЯУб', desc: 'ро╡ропро▓рпНроХро│рпН рокро╛ро░рпНроХрпНроХ' },
      'analytics': { label: 'роЕро▒ро┐роХрпНроХрпИроХро│рпН', emoji: 'ЁЯУК', desc: 'рокроХрпБрокрпНрокро╛ропрпНро╡рпБ рокро╛ро░рпНроХрпНроХ' },
      'recommendations': { label: 'AI роЙродро╡ро┐ропро╛ро│ро░рпН', emoji: 'ЁЯдЦ', desc: 'рокрпБродрпНродро┐роЪро╛ро▓ро┐ роЖро▓рпЛроЪройрпИ' },
      'schemes': { label: 'роЕро░роЪрпБ родро┐роЯрпНроЯроЩрпНроХро│рпН', emoji: 'ЁЯПЫя╕П', desc: 'роиро▓ройрпНроХро│рпН рокрпЖро▒рпБроХ' },
      'aadhaar': { label: 'роЖродро╛ро░рпН роЕроЯрпНроЯрпИ', emoji: 'ЁЯЖФ', desc: 'роЕроЯрпИропро╛ро│ роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ' },
      'alerts': { label: 'роОроЪрпНроЪро░ро┐роХрпНроХрпИроХро│рпН', emoji: 'ЁЯУ▒', desc: 'ро╡ро╛роЯрпНро╕рпНроЖрокрпН роОроЪрпНроЪро░ро┐роХрпНроХрпИ' },
      'community': { label: 'роЪроорпБродро╛ропроорпН', emoji: 'ЁЯСе', desc: 'ро╡ро┐ро╡роЪро╛ропро┐роХро│рпН роЗрогрпИрокрпНрокрпБ' },
      'feedback': { label: 'роХро░рпБродрпНродрпБ', emoji: 'ЁЯОд', desc: 'роХрпБро░ро▓рпН рооро▒рпНро▒рпБроорпН роЙро░рпИ' },
      'offline': { label: 'роЖроГрокрпНро▓рпИройрпН роорпБро▒рпИ', emoji: 'ЁЯУб', desc: 'родро░ро╡рпБ роТродрпНродро┐роЪрпИро╡рпБ' },
      'settings': { label: 'роЕроорпИрокрпНрокрпБроХро│рпН', emoji: 'тЪЩя╕П', desc: 'роЖрокрпН роЕроорпИрокрпНрокрпБроХро│рпН' }
    },
    te: {
      'dashboard': { label: 'р░Зр░▓р▒Нр░▓р▒Б', emoji: 'ЁЯПа', desc: 'р░кр▒Нр░░р░зр░╛р░и р░бр░╛р░╖р▒НтАМр░мр▒Лр░░р▒Нр░бр▒Н' },
      'yield-prediction': { label: 'р░кр░Вр░Я р░жр░┐р░Чр▒Бр░мр░бр░┐', emoji: 'ЁЯМ╛', desc: 'р░кр░Вр░Я р░Ер░Вр░Ър░ир░╛' },
      'monitoring': { label: 'р░╡р▒Нр░пр░╡р░╕р░╛р░п р░кр░░р▒Нр░пр░╡р▒Зр░Хр▒Нр░╖р░г', emoji: 'ЁЯУб', desc: 'р░кр▒Кр░▓р░╛р░▓р▒Б р░Ър▒Вр░бр░Вр░бр░┐' },
      'analytics': { label: 'р░ир░┐р░╡р▒Зр░жр░┐р░Хр░▓р▒Б', emoji: 'ЁЯУК', desc: 'р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░г р░Ър▒Вр░бр░Вр░бр░┐' },
      'recommendations': { label: 'AI р░╕р░╣р░╛р░пр░Хр▒Бр░бр▒Б', emoji: 'ЁЯдЦ', desc: 'р░др▒Жр░▓р░┐р░╡р▒Ир░и р░Ър░┐р░Яр▒Нр░Хр░╛р░▓р▒Б' },
      'schemes': { label: 'р░кр▒Нр░░р░нр▒Бр░др▒Нр░╡ р░кр░ер░Хр░╛р░▓р▒Б', emoji: 'ЁЯПЫя╕П', desc: 'р░кр▒Нр░░р░пр▒Лр░Ьр░ир░╛р░▓р▒Б р░кр▒Кр░Вр░жр░Вр░бр░┐' },
      'aadhaar': { label: 'р░Жр░зр░╛р░░р▒Н р░Хр░╛р░░р▒Нр░бр▒Н', emoji: 'ЁЯЖФ', desc: 'р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Б р░зр▒Гр░╡р▒Ар░Хр░░р░г' },
      'alerts': { label: 'р░╣р▒Жр░Ър▒Нр░Ър░░р░┐р░Хр░▓р▒Б', emoji: 'ЁЯУ▒', desc: 'р░╡р░╛р░Яр▒Нр░╕р░╛р░кр▒Н р░╣р▒Жр░Ър▒Нр░Ър░░р░┐р░Хр░▓р▒Б' },
      'community': { label: 'р░╕р░Вр░Шр░В', emoji: 'ЁЯСе', desc: 'р░░р▒Ир░др▒Бр░▓ р░Ер░ир▒Бр░╕р░Вр░зр░╛р░ир░В' },
      'feedback': { label: 'р░Ер░нр░┐р░кр▒Нр░░р░╛р░пр░В', emoji: 'ЁЯОд', desc: 'р░╡р░╛р░пр░┐р░╕р▒Н р░ор░░р░┐р░пр▒Б р░Яр▒Жр░Хр▒Нр░╕р▒Нр░Яр▒Н' },
      'offline': { label: 'р░Жр░лр▒НтАМр░▓р▒Ир░ир▒Н р░ор▒Лр░бр▒Н', emoji: 'ЁЯУб', desc: 'р░бр▒Зр░Яр░╛ р░╕р░┐р░Вр░Хр▒Н' },
      'settings': { label: 'р░╕р▒Жр░Яр▒Нр░Яр░┐р░Вр░Чр▒Бр░▓р▒Б', emoji: 'тЪЩя╕П', desc: 'р░Ер░кр▒Н р░╕р▒Жр░Яр▒Нр░Яр░┐р░Вр░Чр▒Бр░▓р▒Б' }
    },
    bn: {
      'dashboard': { label: 'ржмрж╛ржбрж╝рж┐', emoji: 'ЁЯПа', desc: 'ржкрзНрж░ржзрж╛ржи ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб' },
      'yield-prediction': { label: 'ржлрж╕рж▓ ржЙрзОржкрж╛ржжржи', emoji: 'ЁЯМ╛', desc: 'ржлрж╕рж▓ ржЕржирзБржорж╛ржи' },
      'monitoring': { label: 'ржЦрж╛ржорж╛рж░ ржкрж░рзНржпржмрзЗржХрзНрж╖ржг', emoji: 'ЁЯУб', desc: 'ржЦрзЗржд ржжрзЗржЦрзБржи' },
      'analytics': { label: 'рж░рж┐ржкрзЛрж░рзНржЯ', emoji: 'ЁЯУК', desc: 'ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржжрзЗржЦрзБржи' },
      'recommendations': { label: 'AI рж╕рж╣рж╛ржпрж╝ржХ', emoji: 'ЁЯдЦ', desc: 'рж╕рзНржорж╛рж░рзНржЯ ржкрж░рж╛ржорж░я┐╜я┐╜я┐╜рж╢' },
      'schemes': { label: 'рж╕рж░ржХрж╛рж░рж┐ ржкрж░рж┐ржХрж▓рзНржкржирж╛', emoji: 'ЁЯПЫя╕П', desc: 'рж╕рзБржмрж┐ржзрж╛ ржкрж╛ржи' },
      'aadhaar': { label: 'ржЖржзрж╛рж░ ржХрж╛рж░рзНржб', emoji: 'ЁЯЖФ', desc: 'ржкрж░рж┐ржЪржпрж╝ ржпрж╛ржЪрж╛ржЗ' },
      'alerts': { label: 'рж╕рждрж░рзНржХрждрж╛', emoji: 'ЁЯУ▒', desc: 'рж╣рзЛржпрж╝рж╛ржЯрж╕ржЕрзНржпрж╛ржк рж╕рждрж░рзНржХрждрж╛' },
      'community': { label: 'рж╕ржорзНржкрзНрж░ржжрж╛ржпрж╝', emoji: 'ЁЯСе', desc: 'ржХрзГрж╖ржХ рж╕ржВржпрзЛржЧ' },
      'feedback': { label: 'ржорждрж╛ржоржд', emoji: 'ЁЯОд', desc: 'ржХржгрзНржарж╕рзНржмрж░ ржУ ржЯрзЗржХрзНрж╕ржЯ' },
      'offline': { label: 'ржЕржлрж▓рж╛ржЗржи ржорзЛржб', emoji: 'ЁЯУб', desc: 'ржбрзЗржЯрж╛ рж╕рж┐ржЩрзНржХ' },
      'settings': { label: 'рж╕рзЗржЯрж┐ржВрж╕', emoji: 'тЪЩя╕П', desc: 'ржЕрзНржпрж╛ржк рж╕рзЗржЯрж┐ржВрж╕' }
    },
    kn: {
      'dashboard': { label: 'р▓ор▓ир│Ж', emoji: 'ЁЯПа', desc: 'р▓ор│Бр▓Цр│Нр▓п р▓бр│Нр▓пр▓╛р▓╢р│НтАМр▓мр│Лр▓░р│Нр▓бр│Н' },
      'yield-prediction': { label: 'р▓мр│Жр▓│р│Ж р▓Зр▓│р│Бр▓╡р▓░р▓┐', emoji: 'ЁЯМ╛', desc: 'р▓мр│Жр▓│р│Ж р▓Ер▓Вр▓жр▓╛р▓Ьр│Б' },
      'monitoring': { label: 'р▓Хр│Гр▓╖р▓┐ р▓ор│Зр▓▓р│Нр▓╡р▓┐р▓Ър▓╛р▓░р▓гр│Ж', emoji: 'ЁЯУб', desc: 'р▓╣р│Кр▓▓р▓Чр▓│р▓ир│Нр▓ир│Б р▓ир│Лр▓бр▓┐' },
      'analytics': { label: 'р▓╡р▓░р▓жр▓┐р▓Чр▓│р│Б', emoji: 'ЁЯУК', desc: 'р▓╡р▓┐р▓╢р│Нр▓▓р│Зр▓╖р▓гр│Ж р▓ир│Лр▓бр▓┐' },
      'recommendations': { label: 'AI р▓╕р▓╣р▓╛р▓пр▓Х', emoji: 'ЁЯдЦ', desc: 'р▓╕р│Нр▓ор▓╛р▓░р│Нр▓Яр│Н р▓╕р▓▓р▓╣р│Ж' },
      'schemes': { label: 'р▓╕р▓░р│Нр▓Хр▓╛р▓░р▓┐ р▓пр│Лр▓Ьр▓ир│Жр▓Чр▓│р│Б', emoji: 'ЁЯПЫя╕П', desc: 'р▓кр│Нр▓░р▓пр│Лр▓Ьр▓ир▓Чр▓│р▓ир│Нр▓ир│Б р▓кр▓бр│Жр▓пр▓┐р▓░р▓┐' },
      'aadhaar': { label: 'р▓Жр▓зр▓╛р▓░р│Н р▓Хр▓╛р▓░р│Нр▓бр│Н', emoji: 'ЁЯЖФ', desc: 'р▓Чр│Бр▓░р│Бр▓др▓┐р▓╕р│Бр▓╡р▓┐р▓Хр│Ж р▓кр▓░р▓┐р▓╢р│Ар▓▓р▓ир│Ж' },
      'alerts': { label: 'р▓Ор▓Ър│Нр▓Ър▓░р▓┐р▓Хр│Жр▓Чр▓│р│Б', emoji: 'ЁЯУ▒', desc: 'р▓╡р▓╛р▓Яр│Нр▓╕р│Нр▓Жр▓кр│Н р▓Ор▓Ър│Нр▓Ър▓░р▓┐р▓Хр│Жр▓Чр▓│р│Б' },
      'community': { label: 'р▓╕р▓ор│Бр▓жр▓╛р▓п', emoji: 'ЁЯСе', desc: 'р▓░р│Ир▓др▓░ р▓╕р▓Вр▓кр▓░р│Нр▓Х' },
      'feedback': { label: 'р▓Ер▓нр▓┐р▓кр│Нр▓░р▓╛р▓п', emoji: 'ЁЯОд', desc: 'р▓зр│Нр▓╡р▓ир▓┐ р▓ор▓др│Нр▓др│Б р▓кр▓ар│Нр▓п' },
      'offline': { label: 'р▓Жр▓лр│НтАМр▓▓р│Ир▓ир│Н р▓ор│Лр▓бр│Н', emoji: 'ЁЯУб', desc: 'р▓бр│Зр▓Яр▓╛ р▓╕р▓┐р▓Вр▓Хр│Н' },
      'settings': { label: 'р▓╕р│Жр▓Яр│Нр▓Яр▓┐р▓Вр▓Чр│НтАМр▓Чр▓│р│Б', emoji: 'тЪЩя╕П', desc: 'р▓Ер▓кр│Н р▓╕р│Жр▓Яр│Нр▓Яр▓┐р▓Вр▓Чр│НтАМр▓Чр▓│р│Б' }
    },
    gu: {
      'dashboard': { label: 'ркШрк░', emoji: 'ЁЯПа', desc: 'ркорлБркЦрлНркп ркбрлЗрк╢ркмрлЛрк░рлНркб' },
      'yield-prediction': { label: 'рккрк╛ркХ ркЙркдрлНрккрк╛ркжрки', emoji: 'ЁЯМ╛', desc: 'рккрк╛ркХ ркЕркирлБркорк╛рки' },
      'monitoring': { label: 'ркЦрлЗркдрк░ ркжрлЗркЦрк░рлЗркЦ', emoji: 'ЁЯУб', desc: 'ркЦрлЗркдрк░рлЛ ркЬрлБркУ' },
      'analytics': { label: 'ркЕрк╣рлЗрк╡рк╛рк▓рлЛ', emoji: 'ЁЯУК', desc: 'рк╡рк┐рк╢рлНрк▓рлЗрк╖ркг ркЬрлБркУ' },
      'recommendations': { label: 'AI рк╕рк╣рк╛ркпркХ', emoji: 'ЁЯдЦ', desc: 'рк╕рлНркорк╛рк░рлНркЯ рк╕рк▓рк╛рк╣' },
      'schemes': { label: 'рк╕рк░ркХрк╛рк░рлА ркпрлЛркЬркирк╛ркУ', emoji: 'ЁЯПЫя╕П', desc: 'рклрк╛ркпркжрк╛ ркорлЗрк│рк╡рлЛ' },
      'aadhaar': { label: 'ркЖркзрк╛рк░ ркХрк╛рк░рлНркб', emoji: 'ЁЯЖФ', desc: 'ркУрк│ркЦ ркЪркХрк╛рк╕ркгрлА' },
      'alerts': { label: 'ркЕрк▓рк░рлНркЯ', emoji: 'ЁЯУ▒', desc: 'рк╡рлНрк╣рк╛ркЯрлНрк╕ркЕркк ркЕрк▓рк░рлНркЯ' },
      'community': { label: 'рк╕ркорлБркжрк╛ркп', emoji: 'ЁЯСе', desc: 'ркЦрлЗркбрлВркд ркЬрлЛркбрк╛ркг' },
      'feedback': { label: 'рккрлНрк░ркдрк┐рк╕рк╛ркж', emoji: 'ЁЯОд', desc: 'ркЕрк╡рк╛ркЬ ркЕркирлЗ ркЯрлЗркХрлНрк╕рлНркЯ' },
      'offline': { label: 'ркУрклрк▓рк╛ркЗрки ркорлЛркб', emoji: 'ЁЯУб', desc: 'ркбрлЗркЯрк╛ рк╕рк┐ркВркХ' },
      'settings': { label: 'рк╕рлЗркЯрк┐ркВркЧрлНрк╕', emoji: 'тЪЩя╕П', desc: 'ркЕрлЗркк рк╕рлЗркЯрк┐ркВркЧрлНрк╕' }
    },
    pa: {
      'dashboard': { label: 'риШри░', emoji: 'ЁЯПа', desc: 'риорйБрй▒риЦ рибрйИри╕ри╝римрйЛри░риб' },
      'yield-prediction': { label: 'рилри╕ри▓ рикрйИрижри╛ри╡ри╛ри░', emoji: 'ЁЯМ╛', desc: 'рилри╕ри▓ рижри╛ риЕриирйБриори╛рии' },
      'monitoring': { label: 'риЦрйЗрид риири┐риЧри░ри╛риирйА', emoji: 'ЁЯУб', desc: 'риЦрйЗрид рижрйЗриЦрйЛ' },
      'analytics': { label: 'ри░ри┐рикрйЛри░риЯри╛риВ', emoji: 'ЁЯУК', desc: 'ри╡ри┐ри╕ри╝ри▓рйЗри╕ри╝риг рижрйЗриЦрйЛ' },
      'recommendations': { label: 'AI ри╕ри╣ри╛риЗриХ', emoji: 'ЁЯдЦ', desc: 'ри╕риори╛ри░риЯ ри╕ри▓ри╛ри╣' },
      'schemes': { label: 'ри╕ри░риХри╛ри░рйА рипрйЛриЬриири╛ри╡ри╛риВ', emoji: 'ЁЯПЫя╕П', desc: 'рилри╛риЗрижрйЗ ри▓риУ' },
      'aadhaar': { label: 'риЖризри╛ри░ риХри╛ри░риб', emoji: 'ЁЯЖФ', desc: 'рикриЫри╛риг рикрйБри╕ри╝риЯрйА' },
      'alerts': { label: 'риЕри▓ри░риЯ', emoji: 'ЁЯУ▒', desc: 'ри╡рйНри╣ри╛риЯри╕риРрик риЕри▓ри░риЯ' },
      'community': { label: 'ринри╛риИриЪри╛ри░ри╛', emoji: 'ЁЯСе', desc: 'риХри┐ри╕ри╛рии риХриирйИриХри╕ри╝рии' },
      'feedback': { label: 'рилрйАрибримрйИриХ', emoji: 'ЁЯОд', desc: 'риЖри╡ри╛риЬри╝ риЕридрйЗ риЯрйИриХри╕риЯ' },
      'offline': { label: 'риЖрилри▓ри╛риИрии риорйЛриб', emoji: 'ЁЯУб', desc: 'рибрйЗриЯри╛ ри╕ри┐рй░риХ' },
      'settings': { label: 'ри╕рйИриЯри┐рй░риЧриЬри╝', emoji: 'тЪЩя╕П', desc: 'риРрик ри╕рйИриЯри┐рй░риЧриЬри╝' }
    },
    ml: {
      'dashboard': { label: 'р┤╡р╡Ар┤Яр╡Н', emoji: 'ЁЯПа', desc: 'р┤кр╡Нр┤░р┤зр┤╛р┤и р┤бр┤╛р┤╖р╡Нр┤мр╡Лр╡╝р┤бр╡Н' },
      'yield-prediction': { label: 'р┤╡р┤┐р┤│ р┤╡р┤┐р┤│р┤╡р╡Н', emoji: 'ЁЯМ╛', desc: 'р┤╡р┤┐р┤│ р┤кр╡Нр┤░р┤╡р┤Ър┤ир┤В' },
      'monitoring': { label: 'р┤Хр╡Гр┤╖р┤┐ р┤ир┤┐р┤░р╡Ар┤Хр╡Нр┤╖р┤гр┤В', emoji: 'ЁЯУб', desc: 'р┤╡р┤пр┤▓р╡Бр┤Хр╡╛ р┤Хр┤╛р┤гр╡Бр┤Х' },
      'analytics': { label: 'р┤▒р┤┐р┤кр╡Нр┤кр╡Лр╡╝р┤Яр╡Нр┤Яр╡Бр┤Хр╡╛', emoji: 'ЁЯУК', desc: 'р┤╡р┤┐р┤╢р┤Хр┤▓р┤ир┤В р┤Хр┤╛р┤гр╡Бр┤Х' },
      'recommendations': { label: 'AI р┤╕р┤╣р┤╛р┤пр┤┐', emoji: 'ЁЯдЦ', desc: 'р┤╕р╡Нр┤ор┤╛р╡╝р┤Яр╡Нр┤Яр╡Н р┤ир┤┐р╡╝р┤жр╡Нр┤жр╡Зр┤╢р┤Щр╡Нр┤Щр╡╛' },
      'schemes': { label: 'р┤╕р╡╝р┤Хр╡Нр┤Хр┤╛р╡╝ р┤кр┤жр╡Нр┤зр┤др┤┐р┤Хр╡╛', emoji: 'ЁЯПЫя╕П', desc: 'р┤Жр┤ир╡Бр┤Хр╡Вр┤▓р╡Нр┤пр┤Щр╡Нр┤Щр╡╛ р┤ир╡Зр┤Яр╡Бр┤Х' },
      'aadhaar': { label: 'р┤Жр┤зр┤╛р╡╝ р┤Хр┤╛р╡╝р┤бр╡Н', emoji: 'ЁЯЖФ', desc: 'р┤др┤┐р┤░р┤┐р┤Ър╡Нр┤Ър┤▒р┤┐р┤пр╡╜ р┤кр┤░р┤┐р┤╢р╡Лр┤зр┤и' },
      'alerts': { label: 'р┤Ер┤▓р╡Зр╡╝р┤Яр╡Нр┤Яр╡Бр┤Хр╡╛', emoji: 'ЁЯУ▒', desc: 'р┤╡р┤╛р┤Яр╡Нр┤Яр╡Нр┤╕р┤╛р┤кр╡Нр┤кр╡Н р┤Ер┤▓р╡Зр╡╝р┤Яр╡Нр┤Яр╡Бр┤Хр╡╛' },
      'community': { label: 'р┤╕р┤ор╡Вр┤╣р┤В', emoji: 'ЁЯСе', desc: 'р┤Хр╡╝р┤╖р┤Х р┤мр┤ир╡Нр┤зр┤В' },
      'feedback': { label: 'р┤лр╡Ар┤бр╡Нр┤мр┤╛р┤Хр╡Нр┤Хр╡Н', emoji: 'ЁЯОд', desc: 'р┤╡р╡Лр┤пр╡Нр┤╕р╡Бр┤В р┤Яр╡Жр┤Хр╡Нр┤╕р╡Нр┤▒р╡Нр┤▒р╡Бр┤В' },
      'offline': { label: 'р┤Ур┤лр╡Нр┤▓р╡Ир╡╗ р┤ор╡Лр┤бр╡Н', emoji: 'ЁЯУб', desc: 'р┤бр┤╛р┤▒р╡Нр┤▒ р┤╕р┤┐р┤Щр╡Нр┤Хр╡Н' },
      'settings': { label: 'р┤╕р╡Жр┤▒р╡Нр┤▒р┤┐р┤Вр┤Чр╡Бр┤Хр╡╛', emoji: 'тЪЩя╕П', desc: 'р┤Жр┤кр╡Нр┤кр╡Н р┤╕р╡Жр┤▒р╡Нр┤▒р┤┐р┤Вр┤Чр╡Бр┤Хр╡╛' }
    }
  };

  const translations = menuTranslations[language] || menuTranslations.en;

  return [
    // Core Features (Primary)
    { id: 'dashboard', icon: Home, ...translations.dashboard, primary: true, color: 'bg-blue-500' },
    { id: 'yield-prediction', icon: Target, ...translations['yield-prediction'], primary: true, color: 'bg-green-500' },
    
    // Monitoring & Analysis 
    { id: 'monitoring', icon: Satellite, ...translations.monitoring, color: 'bg-purple-500' },
    { id: 'analytics', icon: TrendingUp, ...translations.analytics, color: 'bg-orange-500' },
    
    // Tools & Services
    { id: 'recommendations', icon: Lightbulb, ...translations.recommendations, color: 'bg-yellow-500' },
    { id: 'schemes', icon: Building2, ...translations.schemes, color: 'bg-red-500' },
    { id: 'aadhaar', icon: CreditCard, ...translations.aadhaar, color: 'bg-indigo-500' },
    { id: 'alerts', icon: MessageCircle, ...translations.alerts, color: 'bg-cyan-500' },
    
    // Community & Support
    { id: 'community', icon: Users, ...translations.community, color: 'bg-blue-500' },
    { id: 'feedback', icon: HeadphonesIcon, ...translations.feedback, color: 'bg-pink-500' },
    { id: 'offline', icon: WifiOff, ...translations.offline, color: 'bg-indigo-500' },
    
    // Account
    { id: 'settings', icon: Settings, ...translations.settings, color: 'bg-gray-500' }
  ];
};

export function VisualSidebar({ currentScreen, setCurrentScreen, language }: VisualSidebarProps) {
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const items = getVisualMenuItems(language);

  const SidebarContent = () => (
    <div className="h-full bg-gradient-to-b from-green-50 to-emerald-50 border-r-4 border-green-200 flex flex-col">
      {/* Header with Logo */}
      <div className="p-6 bg-gradient-to-r from-green-600 to-emerald-600 text-white">
        <div className="flex items-center gap-3">
          <KrishiLogo size="lg" className="text-white" />
          <div>
            <h2 className="font-bold text-xl">
              {getContent(language, 'appName')}
            </h2>
            <p className="text-sm opacity-90">
              {language === 'hi' ? 'AI рдХрд┐рд╕рд╛рди рд╕рд╣рд╛рдпрдХ' : 
               language === 'mr' ? 'AI рд╢реЗрддрдХрд░реА рд╕рд╣рд╛рдпреНрдпрдХ' :
               language === 'ta' ? 'AI ро╡ро┐ро╡роЪро╛роп роЙродро╡ро┐ропро╛ро│ро░рпН' :
               language === 'te' ? 'AI р░░р▒Ир░др▒Б р░╕р░╣р░╛р░пр░Хр▒Бр░бр▒Б' :
               language === 'bn' ? 'AI ржХрзГрж╖ржХ рж╕рж╣рж╛ржпрж╝ржХ' :
               language === 'kn' ? 'AI р▓░р│Ир▓д р▓╕р▓╣р▓╛р▓пр▓Х' :
               language === 'gu' ? 'AI ркЦрлЗркбрлВркд ркоркжркжркЧрк╛рк░' :
               language === 'pa' ? 'AI риХри┐ри╕ри╛рии ри╕ри╣ри╛риЗриХ' :
               language === 'ml' ? 'AI р┤Хр╡╝р┤╖р┤Х р┤╕р┤╣р┤╛р┤пр┤┐' :
               'AI Farming Assistant'}
            </p>
          </div>
        </div>
      </div>

      {/* Main Menu - Big Visual Buttons */}
      <nav className="flex-1 p-4 space-y-3">
        {items.map((item) => {
          const Icon = item.icon;
          const isActive = currentScreen === item.id;
          const isPrimary = item.primary;
          
          return (
            <Button
              key={item.id}
              variant="ghost"
              onClick={() => {
                setCurrentScreen(item.id);
                setIsMobileMenuOpen(false);
              }}
              className={`w-full h-20 p-4 rounded-2xl transition-all duration-300 hover:scale-105 ${
                isActive 
                  ? 'bg-gradient-to-r from-green-500 to-emerald-500 text-white shadow-lg scale-105' 
                  : isPrimary
                  ? 'bg-gradient-to-r from-green-100 to-emerald-100 hover:from-green-200 hover:to-emerald-200 border-2 border-green-300 shadow-md'
                  : 'bg-white hover:bg-gray-50 border border-gray-200 shadow-sm hover:shadow-md'
              }`}
              style={{
                boxShadow: isActive ? '0 10px 25px rgba(34, 197, 94, 0.3)' : undefined
              }}
            >
              <div className="flex items-center gap-4 w-full">
                {/* Visual Icon + Emoji */}
                <div className="flex items-center gap-2">
                  <span className="text-3xl">{item.emoji}</span>
                  <Icon className={`h-6 w-6 ${isActive ? 'text-white' : isPrimary ? 'text-green-600' : 'text-gray-600'}`} />
                </div>
                
                {/* Text Content */}
                <div className="flex-1 text-left">
                  <div className={`font-bold text-lg ${isActive ? 'text-white' : isPrimary ? 'text-green-800' : 'text-gray-800'}`}>
                    {item.label}
                  </div>
                  <div className={`text-sm ${isActive ? 'text-green-100' : isPrimary ? 'text-green-600' : 'text-gray-500'}`}>
                    {item.desc}
                  </div>
                </div>
                
                {/* Active Indicator */}
                {isActive && (
                  <div className="w-4 h-4 bg-white rounded-full animate-pulse" />
                )}
                {isPrimary && !isActive && (
                  <div className="w-3 h-3 bg-green-500 rounded-full animate-pulse" />
                )}
              </div>
            </Button>
          );
        })}
      </nav>

      {/* User Profile Section */}
      <div className="p-4 bg-gradient-to-r from-green-100 to-emerald-100 border-t-2 border-green-200">
        <div className="flex items-center gap-4 p-4 bg-white rounded-xl shadow-sm">
          <div className="w-14 h-14 bg-gradient-to-br from-green-400 to-emerald-500 rounded-full flex items-center justify-center text-2xl">
            ЁЯзСтАНЁЯМ╛
          </div>
          <div className="flex-1">
            <p className="font-bold text-gray-800">
              {language === 'hi' ? 'рдХрд┐рд╕рд╛рди' : 
               language === 'mr' ? 'рд╢реЗрддрдХрд░реА' :
               language === 'ta' ? 'ро╡ро┐ро╡роЪро╛ропро┐' :
               language === 'te' ? 'р░░р▒Ир░др▒Б' :
               language === 'bn' ? 'ржХрзГрж╖ржХ' :
               language === 'kn' ? 'р▓░р│Ир▓д' :
               language === 'gu' ? 'ркЦрлЗркбрлВркд' :
               language === 'pa' ? 'риХри┐ри╕ри╛рии' :
               language === 'ml' ? 'р┤Хр╡╝р┤╖р┤Хр╡╗' :
               'Farmer'}
            </p>
            <p className="text-sm text-gray-600">
              {language === 'hi' ? 'рд╕реНрдорд╛рд░реНрдЯ рдЦреЗрддреА' : 
               language === 'mr' ? 'рд╕реНрдорд╛рд░реНрдЯ рд╢реЗрддреА' :
               language === 'ta' ? 'рокрпБродрпНродро┐роЪро╛ро▓ро┐ ро╡ро┐ро╡роЪро╛ропроорпН' :
               language === 'te' ? 'р░╕р▒Нр░ор░╛р░░р▒Нр░Яр▒Н р░╡р▒Нр░пр░╡р░╕р░╛р░пр░В' :
               language === 'bn' ? 'рж╕рзНржорж╛рж░рзНржЯ ржЪрж╛рж╖рж╛ржмрж╛ржж' :
               language === 'kn' ? 'р▓╕р│Нр▓ор▓╛р▓░р│Нр▓Яр│Н р▓Хр│Гр▓╖р▓┐' :
               language === 'gu' ? 'рк╕рлНркорк╛рк░рлНркЯ ркЦрлЗркдрлА' :
               language === 'pa' ? 'ри╕риори╛ри░риЯ риЦрйЗридрйА' :
               language === 'ml' ? 'р┤╕р╡Нр┤ор┤╛р╡╝р┤Яр╡Нр┤Яр╡Н р┤Хр╡Гр┤╖р┤┐' :
               'Smart Farming'}
            </p>
          </div>
          <Button
            variant="ghost"
            size="sm"
            onClick={() => setCurrentScreen('settings')}
            className="p-2 hover:bg-green-100 rounded-lg"
          >
            <Settings className="h-5 w-5 text-gray-600" />
          </Button>
        </div>
      </div>
    </div>
  );

  return (
    <>
      {/* Desktop Sidebar */}
      <div className="hidden md:block w-80">
        <SidebarContent />
      </div>

      {/* Mobile Menu Button */}
      <div className="md:hidden fixed top-4 left-4 z-50">
        <Button
          variant="default"
          size="lg"
          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
          className="bg-green-500 hover:bg-green-600 text-white shadow-lg rounded-2xl p-3"
        >
          {isMobileMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
          <span className="ml-2 font-medium">
            {isMobileMenuOpen ? 
              (language === 'hi' ? 'рдмрдВрдж рдХрд░реЗрдВ' : 'Close') : 
              (language === 'hi' ? 'рдореЗрдиреВ' : 'Menu')
            }
          </span>
        </Button>
      </div>

      {/* Mobile Sidebar */}
      {isMobileMenuOpen && (
        <motion.div
          initial={{ x: -400 }}
          animate={{ x: 0 }}
          exit={{ x: -400 }}
          transition={{ type: 'spring', damping: 25, stiffness: 120 }}
          className="md:hidden fixed inset-0 z-40 bg-black/50"
          onClick={() => setIsMobileMenuOpen(false)}
        >
          <div className="w-80 h-full" onClick={(e) => e.stopPropagation()}>
            <SidebarContent />
          </div>
        </motion.div>
      )}
    </>
  );
}